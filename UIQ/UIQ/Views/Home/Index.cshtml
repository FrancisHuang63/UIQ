@using Microsoft.AspNetCore.Hosting.Server
@using Microsoft.AspNetCore.Hosting.Server.Features
@using UIQ.Controllers
@using UIQ.Enums
@using UIQ.Services.Interfaces
@using UIQ.ViewModels
@inject IHttpContextAccessor httpContextAccessor
@inject IServer server;
@inject IConfiguration configuration
@inject IEncodeService encodeService;

@model IEnumerable<HomeTableViewModel>
@{
    Layout = null;
    var user = httpContextAccessor.HttpContext?.User;
    IEnumerable<MenuViewModel> menus = ViewBag.Menu;
    int refreshTimeSeconds = ViewBag.RefreshTimeSeconds == 0 ? 60000 : ((int)ViewBag.RefreshTimeSeconds) * 1000;
    IndexSideEnum indexSide = ViewBag.IndexSide;
    bool isHomePagePermissonNotHave = ViewBag.IsHomePagePermissonNotHave;
    var indexSideImageUrl = string.Empty;
    switch (indexSide)
    {
        case IndexSideEnum.Inside: indexSideImageUrl = Href("~/images/index_inside_01.jpg"); break;
        case IndexSideEnum.Outside: indexSideImageUrl = Href("~/images/index_outside_01.jpg"); break;
        default: indexSideImageUrl = Href("~/images/index_01.jpg"); break;
    }
    var perColumnMemberAmount = configuration.GetValue<int>("PerColumnMemberAmount");

    ViewData["Title"] = "Home Page";
}

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"  lang="zh-hant">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>NWP monitor system</title>

        <link rel="stylesheet" href="~/css/bootstrap/bootstrap.min.css">
        <link rel="stylesheet" href="~/css/bootstrap/bootstrap-theme.min.css">
        <link rel="stylesheet" href="~/css/jquery-ui.min.css" type="text/css" />
        <link rel="stylesheet" href="~/css/jqueryslidemenu.css" type="text/css" />
        <link rel="stylesheet" href="~/css/style.css" type="text/css" />
        <link rel="stylesheet" href="~/css/white.css" type="text/css" />

        <script type="text/javascript" src="~/js/jquery-3.1.1.min.js"></script>
        <script type="text/javascript" src="~/js/jqueryslidemenu.js"></script>
        <script type="text/javascript" src="~/js/selectivizr.js"></script>
        <script type="text/javascript" src="~/js/jquery.tablesorter.min.js"></script>
        <script type="text/javascript" src="~/js/jquery-ui.min.js"></script>
        <script type="text/javascript" src="~/js/jquery-ui-dialog-enhancement/2017-07-25/build/jquery.dialogextend.min.js"></script>
        <script type="text/javascript" src="~/js/tool.js"></script>
        <script type="text/javascript" src="~/js/home.js"></script>

        <script type="text/javascript">
            $(function () {
                $("#status_table").tablesorter({
                    widgets: ['zebra'],
                    headers: {
                        0: {
                            sorter: false
                        }
                    }
                });
                $("#tablesorter-demo2").tablesorter({widgets: ['zebra']});
            });

            //auto refresh,1000=1 second
            function page_refresh()
            {
                window.location.reload();
            }
            setTimeout('page_refresh()', @refreshTimeSeconds);

        </script>
    </head>

    <body>
        <div id='top'>
            <table aria-describedby="top">
                <tr style="display:none;"><th scope="col"></th></tr>
                <tr>
                    <td height="107" valign="bottom" background="@indexSideImageUrl">
                        <div id="topright">welcome! <strong>@(user.Identity?.Name)</strong> <a href='@Url.Action(nameof(LoginController.Logout), "Login")'>logout</a></div>
                        
                        <div id="menu" class="jqueryslidemenu">
                            
                                    <ul>
                                        @foreach(var menu in menus.OrderBy(x => x.Sort))
                                        {
                                            <li>
                                                <a href="javascript:;">@menu.Name</a>
                                                <ul>
                                                    @foreach(var subMenu in menu.ChildItems.OrderBy(x => x.Sort))
                                                    {
                                                        <li>
                                                            <a href="@subMenu.Url" target='_blank'>@subMenu.Name</a>
                                                        </li>
                                                    }
                                                </ul>
                                            </li>
                                        }
                                    </ul>
                                    <br style="clear: left" />
                            
                        </div>
                    </td>
                </tr>
            </table>

            @if (isHomePagePermissonNotHave)
            {
                <table id="status_table" class="tablesorter" cellspacing="1" aria-labelledby="status_table">
                    <thead>
                        <tr>
                            <th scope="col" colspan="9">STATUS TABLE
                                <a href="@Url.Action(nameof(HomeController.DetailedStatus))" target="_blank" class="btn"><span class="glyphicon glyphicon-th-list"></span></a>
                            </th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach(var groupModel in Model.OrderBy(x =>x.Model_Position).GroupBy(x => x.Model_Name))
                        {
                            //依照MemberName分組
                            var memberGroups = groupModel.GroupBy(x => x.Member_Name);
                            //將每個Model的資料切成8個一組
                            var datasFor8Diplay = memberGroups.Select((x, idx) => new { Index = idx, Value = x }).GroupBy(x => x.Index / perColumnMemberAmount).Select(x => x.Select(v => v.Value));
                            @for (int i = 0; i < datasFor8Diplay.Count(); i++)
                            {
                                var setMember = datasFor8Diplay.ElementAt(i);
                                <tr>
                                    <td class="@(i == 0 ? "model_name" : string.Empty)">@(i == 0 ? groupModel.Key : string.Empty)</td>
                                    @for(int dataIdx = 0; dataIdx < perColumnMemberAmount; dataIdx ++)
                                    {
                                        if(dataIdx < setMember.Count())
                                        {
                                            var memberDatas = setMember.ElementAt(dataIdx);
                                            var data = memberDatas.FirstOrDefault();
                                            <td class="member_name @(data.TdClass)">
                                                <a href="@(data.Href)" title="@(data.TdGroupMember)" target="_blank">@(data.TdText)</a>
                                                <br>@($"{data.Dtg} {data.Run_Type}")
                                            </td>
                                        }
                                        else
                                        {
                                            <td></td>
                                        }
                                    }
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            }
        </div>

        @if (isHomePagePermissonNotHave)
        {
            <div id="main">
                <table id="tablesorter-demo2" class="tablesorter" cellspacing="1" border="5" bordercolor="red" >
                    <thead>
                        <tr>
                            <th scope="col">Name</th>
                            <th scope="col">DTG & RUN</th>
                            <th scope="col">Start Time -> Predict End</th>
                            <th scope="col">Stage start (Predict End)</th>
                            <th scope="col">Run Status</th>
                            <th scope="col">Comment</th>
                            <th scope="col">Next Run</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Where(x => x.Comment.Contains("on time") == false).OrderBy(x => x.Model_Position))
                        {
                            var trClass = (item.Status ?? string.Empty).ToUpper() == "FAIL" ? "failed" : string.Empty;
                            var upperStatus = (item.Status ?? string.Empty).ToUpper();

                            <tr class="@(trClass)">
                                <td class="left">
                                    @if(user.IsInRole(UIQ.Enums.GroupNameEnum.ADM.ToString()))
                                    {
                                        <a href="@Url.Action(nameof(MaintainToolsController.ModelMemberSet), "MaintainTools", new{ memberId = item.Member_Id })" target="_blank"> 
                                            <img alt="Edit" src="~/images/edit.png" width="12"/>
                                        </a>
                                    }
                                    <a style="text-decoration:none; font-weight:bold" href="@(Url.Action(nameof(LogviewController.Index), "Logview", new { modelName = item.Model_Name, memberName = item.Member_Name, account = item.Account }))" target='_blank'>
                                         @($"{item.Model_Name}_{item.Member_Name} ({item.Nickname})")
                                    </a>
                                </td>

                                <td class="left">@($"{item.Dtg} {item.Run_Type}")</td>
                                <td>@($"{item.Start_Time.ToString("HH:mm")} -> {item.End_Time.ToString("HH:mm")}")</td>
                                <td class="left" title="@(item.Shell_Name)">@($"{item.Sms_Name} ({(item.Sms_Time == null ? string.Empty : item.Sms_Time.Value.ToString("HH:mm"))} -> {item.Pre_End.ToString("HH:mm")})")</td>
                                <td class="center logData" data-model="@item.Model_Name" data-member="@item.Member_Name" data-account="@item.Account"></td>
                                <td class="@item.TdClass">@item.Comment</td>
                                <td>@item.NextRun</td>
                            </tr>
                        }
                    </tbody>
                </table>

                <input type=button style="display:scroll;position:fixed;bottom:5px;right:30px;width:80px;" value="Return top" onclick="window.scrollTo(0, 0);"></input>
            </div>

            if (Model.Any(x => x.AlertFlag)) 
            {
                <object>
                   <param name="vedio" value="~/media/moscode.midi" />
                   <embed src="~/media/moscode.midi" autostart="true" width=70 height=25 ></embed>
                </object>
            }   
        }
    </body>

    <script>
        $(function(){
            $('td.logData').each(function(){
                let tdLogData = $(this);
                let modelName = tdLogData.data('model');
                let memberName = tdLogData.data('member');
                let account = tdLogData.data('account');

                $.ajax({
                    url: '@(Url.Action(nameof(LogviewController.GetLogData), "Logview"))',
                    type: 'POST',
                    data: { modelName: modelName, memberName: memberName, acnt: account, isGetLastLine: true },
                    success: function(response){
                        if(response.success){
                            if(response.data.length > 0){
                                let logData = response.data[0];
                                let span = $('<span/>');

                                if(logData.match(/^[A-Za-z0-9_\s]+/) || logData.includes('Finish')){
                                    span.addClass('c4');
                                    span.text('Finish');
                                }
                                else if(logData.includes('fail') || logData.includes('cancel')){
                                    span.addClass('c3');
                                    span.text(logData);
                                }
                                else{
                                    span.text(logData);
                                }

                                tdLogData.append(span);
                            }
                        }
                        else{
                            alert('Error : ' + htmlEncode(response.message));
                        }
                    }
                });
            });
        })
    </script>
</html>
