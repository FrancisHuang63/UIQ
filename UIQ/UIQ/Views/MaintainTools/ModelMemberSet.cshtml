@using UIQ.Controllers
@using UIQ.Enums
@model Member
@{
	Layout = null;
	bool isNew = ViewBag.IsNew;
	IEnumerable<Model> modelItems = ViewBag.ModelItems;
	IEnumerable<Data> dataItems = ViewBag.DataItems;
	IEnumerable<Work> workItems = ViewBag.WorkItems;
	IEnumerable<CronTab> cronTabItems = ViewBag.CronTabItems;
	IEnumerable<Batch> batchItems = ViewBag.BatchItems;
	IEnumerable<Archive> archiveItems = ViewBag.ArchiveItems;
	IEnumerable<Output> outputItems = ViewBag.OutputItems;

	var currentModelItem = modelItems.FirstOrDefault(x => x.Model_Id == Model?.Model_Id);
	var newModelPostion = (modelItems?.Max(x => x.Model_Position) ?? 0) + 1;
}

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<script type="text/javascript" src="~/js/jquery-3.1.1.min.js"></script>
<script type="text/javascript" src="~/js/jquery-ui.min.js"></script>
<script type="text/javascript" src="~/js/apprise-1.5.full.js"></script>
<script type="text/javascript" src="~/js/tool.js"></script>
<script type="text/javascript" src="~/js/jquery.flexselect.js"></script>
<script type="text/javascript" src="~/js/liquidmetal.js"></script>
<script type="text/javascript" src="~/js/setting.js"></script>

<html xmlns="http://www.w3.org/1999/xhtml"  lang="zh-hant">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
		<link href="~/css/jquery-ui.min.css" rel="stylesheet" type="text/css" />
		<link href="~/css/style.css" rel="stylesheet" type="text/css" />
		<link href="~/css/jqueryslidemenu.css" rel="stylesheet" type="text/css" />
		<link href="~/css/apprise.css" rel="stylesheet" type="text/css" />
		<link href="~/css/flexselect.css" rel="stylesheet" type="text/css" />

		<title>Model & Member Setting</title>
	</head>
	<body>
		<div id="loading"><img alt="loading" src="~/images/clock.gif"></div>
		<div class=topic>Model & Member Setting</div>
		<br>
		<h1>This page is used to @(isNew ? "ADD a NEW" : "EDIT or DELETE an OLD") MODEL & MEMBER</h1>
		<div>
			<form id="setting" action="@Url.Action(nameof(MaintainToolsController.ModelMemberSet))" method="post" autocomplete="off"  enctype="multipart/form-data">
				<input id="memberID" type="hidden" name="memberId" value="@Model?.Member_Id">
				@Html.Hidden("IsNew", isNew)
				<div class="check_point_dialog" id="check_point_dialog" title="Check Points" style="display:none;">
					<table width="100%" border="1" aria-describedby="check_point_dialog">
						<thead>
							<tr>
								<th id="batch_name" width=65%></th>
								<th id="add_check_btn" width=35%>
									<a type="button" id="addCheckPoint" class="btn_default">
										<img src="~/images/add_icons.png" alt="新增"/>
										Add Check Point
									</a>
								</th>
							</tr>
						</thead>
						<tbody></tbody>
					</table>
				</div>

				<table width="85%" border="1" aria-describedby="check_point_dialog2">
					<thead>
						<tr>
							<th scope="col">Name</th>
							<th scope="col" width=80%>Setting</th>
						</tr>
					</thead>
					<tbody>
						@* Model Set *@
						<tr style="display:none;">
							<th scope="col"></th>
						</tr>
						<tr>
							<td>Model Set</td>
							<td>
								<table aria-describedby="Model_Set">
									<tr>
										<th scope="col"></th>
									</tr>
									<tr>
										<td><input type="radio" name="IsNewModelName" @(isNew ? string.Empty : "checked") value="False">Old Model Name<span color="red">*</span>：</td>
										<td>
											<select id="model_select" name="Model.Model_Id">
												@foreach (var item in modelItems)
												{
													var sel = item.Model_Id == Model?.Model_Id ? "selected" : string.Empty;
													<!option value="@item.Model_Id" data-position="@item.Model_Position" @(sel) >@item.Model_Name</!option>
												}
											</select>
											<input type="button" value="DelModel" onclick="deleteModelCheck()">
										</td>
									</tr>
									<tr>
										<td><input type="radio" name="IsNewModelName" value="True" />New Model Name<span style="color:red;">*</span>：</td>
										<td><input type="text" name="New_Model_Name">(Ex: NFS)</td>
									</tr>
									<tr>
										<td>Model Position<span style="color:red;">*</span>：</td>
										<td><input type="text" id="model_position" name="Model.Model_Position" value="@currentModelItem?.Model_Position">(Ex: 24)</td>
									</tr>
									<input type="hidden" name="New_Model_Position" value="@newModelPostion">
								</table>
							</td>
						</tr>

						@* Member Set *@
						<tr>
							<td>Member Set</td>
							<td>
								<table aria-describedby="Member_Set">
									<tr style="display:none;">
										<th scope="col"></th>
									</tr>
									<tr>
										<td>Member Name<span style="color:red;">*</span>：</td>
										<td>
											<input type="text" name="Member.Member_Name" value="@Model?.Member_Name">(Ex: M03)
											<input type="hidden" name="Member.Member_Id" value="@Model?.Member_Id">
											<input type="hidden" id="memberModelId" name="Member.Model_Id" value="@Model?.Model_Id">
										</td>
									</tr>
									<tr>
										<td>Member Nickname<span style="color:red;">*</span>：</td>
										<td><input type="text" name="Member.Nickname" value="@Model?.Nickname"></td>
									</tr>
									<tr>
										<td>Member Position<span style="color:red;">*</span>：</td>
										<td><input type="text" name="Member.Member_Position" value="@Model?.Member_Position">(Ex: 24)</td>
									</tr>
									<tr>
										<td>Member Account<span style="color:red;">*</span>：</td>
										<td><input type="text" name="Member.Account" value="@Model?.Account">(Ex: npcaxxx)</td>
									</tr>
									<tr>
										<td>Member Path：</td>
										<td>
											<input type="text" name="Member.Member_Path" value="@Model?.Member_Path">
											(Ex: /ncs/npcaxxx/<span style="color:red;">*</span>/NFS/M03)
										</td>
									</tr>
									<tr>
										<td>Dtg Value<span style="color:red;">*</span>：</td>
										<td><input type="text" name="Member.Member_Dtg_Value" value="@Model?.Member_Dtg_Value">(Ex: 6 or 12 or 24)</td>
									</tr>
									<tr>
										<td>Group Member Name：</td>
										<td><input type="text" name="Member.Model_Group" value="@Model?.Model_Group">(Ex: M01 TWRF or M03 caa)</td>
									</tr>
									<tr>
										<td>Member Reset：</td>
										<td><input type="text" name="Member.Reset_Model" value="@Model?.Reset_Model">(Ex: cgibin/KillJob.ksh)</td>
									</tr>
									<tr>
										<td>Member Dtg Adjust：</td>
										<td><input type="text" name="Member.Dtg_Adjust" value="@Model?.Dtg_Adjust">(Ex: bin/setdtg.sh)</td>
									</tr>
									<tr>
										<td>Member Fix：</td>
										<td><input type="text" name="Member.Fix_Failed_Model" value="@Model?.Fix_Failed_Model">(Ex: cgibin/Rescue.ksh)</td>
									</tr>
									<tr>
										<td>Member Submit：</td>
										<td><input type="text" name="Member.Submit_Model" value="@Model?.Submit_Model">(Ex: cgibin/ReRun.ksh)</td>
									</tr>
									<tr>
										<td>Normal Prediction Time：</td>
										<td><input type="text" name="normal_pre_time" value="@Model?.Normal_Pre_Time">(Ex: 300)</td>
									</tr>
									<tr>
										<td>Typhoon Prediction Time：</td>
										<td><input type="text" name="Typhoon_Pre_Time" value="@Model?.Typhoon_Pre_Time">(Ex: 300)</td>
									</tr>
									<tr>
										<td>About Typhoon：</td>
										<td><input type="checkbox" id="typhoon_model" name="Member.Typhoon_Model" @(Model?.Typhoon_Model == (int)TyphoonModeEnum.One ? "checked" : string.Empty) value="1"></td>
									</tr>
								</table>
							</td>
						</tr>

						@* Cron Table *@
						<tr>
							<td>Cron Table<img src="~/images/add_icons.png" onclick="addSatnamingCronGroup()" alt="新增"/></td>
							<td>
								<table id="crontabTable" aria-describedby="crontabTable">
									<tr style="display:none;"><th scope="col"></th></tr>
									<tbody><tr></tr></tbody>
								</table>
								<table id="crongrpTable_Normal" border="1" aria-describedby="crongrpTable_Normal" >
									<tbody>
										<tr>
											<th scope="col" bgcolor="lightcyan">Normal<img src="~/images/add_icons.png" onclick="addSatnamingCrontab('Normal')" alt="新增"></th>
										</tr>
										@for (var idx = 0;  idx < cronTabItems.Count(); idx ++)
										{
											var item = cronTabItems.ElementAt(idx);

											<tr>
												<td id="crontab_@(idx)" data-index="@(idx)">
													<input id="crontabInput_@(idx)" name="CronTabs[@(idx)].Start_Time" type="text" value="@item.Start_Time">@(idx == 0 ? "(Ex: 17:00:00)" : string.Empty)
													<img src="~/images/delete_icons.png" onclick="deleteSatnamingCrontab('crontab_@(idx)')" alt="移除">
												</td>
												<input id="crontab_gid_@(idx)" name="CronTabs[@(idx)].Cron_Group" type="hidden" value="@(idx== 0 ? "Normal" : item.Cron_Group)">
												<input type="hidden" name="CronTabs[@(idx)].Master_Group" value="@item.Master_Group" />
											</tr>
										}
									</tbody>
								</table>
								<input id="crontabRowNum" type="hidden" name="crontabRowNum" value="@cronTabItems.Count()">
								<input id="validation" type="hidden" name="validation" value="@cronTabItems?.FirstOrDefault()?.Cron_Group">
							</td>
						</tr>


						@* Batch *@
						<tr>
							<td>Batch<img src="~/images/add_icons.png" onclick="addSatnamingBatch()" alt="新增"/></td>
							<td>
								<table id="batchTable" border="1" frame="below">
									@for (var idx = 0; idx < batchItems.Count(); idx++)
									{
										var item = batchItems.ElementAt(idx);
										<tr>
											<td id="batch_@(idx)">
												<table width="100%">
													<tr>
														<td>Batch Position<font color="red">*</font></td>
														<td>
															<input id="batchInputPosition_@(idx)" name="Batchs[@(idx)].Batch_Position" type="text" value="@item?.Batch_Position">(Ex: 1, 2 ,3)
															<img src="~/images/delete_icons.png" onclick="deleteSatnamingBatch("batch_@(idx)")" alt="移除" align="right"/>
														</td>
													</tr>
													<tr>
														<td>Batch Name<font color="red">*</font></td>
														<td>
															<input class="batchName" id="batchInputName_@(idx)" name="Batchs[@(idx)].Batch_Name" type="text" size="17" value="@item?.Batch_Name">
															<input id="batchInputRelay_@(idx)" name="Batchs[@(idx)].Batch_Relay" type="checkbox" value="1" @(item?.Batch_Relay == 1 ? "checked" : string.Empty)>(Ex: Rnwpnfs1&是否為中繼點)
														</td>
													</tr>
													<tr>
														<td>Batch Type</td>
														<td>
															<input id="batchInputType_@(idx)" name="Batchs[@(idx)].Batch_Type" type="text" value="@item?.Batch_Type">(Ex: Major, Post)
														</td>
													</tr>
													<tr>
														<td>Batch Dtg</td>
														<td>
															<input id="batchInputDtg_@(idx)" name="Batchs[@(idx)].Batch_Dtg" type="text" value="@item?.Batch_Dtg">(Ex: 00, 06)
														</td>
													</tr>
													<tr>
														<td>Batch Time<font color="red">*</font></td>
														<td>
															<input id="batchInputTime_@(idx)" name="Batchs[@(idx)].Batch_Time" type="text" size="15" value="@item?.Batch_Time">分鐘&nbsp;(Ex: 44)
														</td>
													</tr>
													<tr>
														<td>Check Point<img id="showCheckPoint" src="~/images/add_icons.png" alt="新增"/></td>
														<td></td>
													</tr>
												</table>
											</td>
										</tr>
									}
								</table>
								<input id="batchRowNum" type="hidden" name="batchRowNum" value="@batchItems.Count()">
							</td>
						</tr>
		
						@* Archive *@
						<tr>
							<td>Archive<img src="~/images/add_icons.png" onclick="addSatnamingArchive()" alt="新增"/></td>
							<td>
								@for (var idx = 0; idx < archiveItems.Count(); idx ++)
								{
									var item = archiveItems.ElementAt(idx);

									<table id="archiveTable">
										<tbody>
											<tr>
												<td id="archive_@(idx)">Target Directory：
													<input class="archive_directory" id="archive_directory_@(idx)" type="text" name="Archives[@(idx)].Target_Directory" value="@item?.Target_Directory">
												</td>
											</tr>
											<tr></tr>
											<tr>
												<td id="archive_@(idx)">
													<select name="Archives[@(idx)].Data_Id">
														@foreach (var data in dataItems)
														{
															<option value="@(data.Data_Id)">@data.Data_Name</option>
														}
													</select>
													<input id="archiveInput_@(idx)" name="Archives[@(idx)].Archive_Redo" type="text" value="@item?.Archive_Redo">(Ex: bin/Rarchive<font color="red">xxx</font>.ksh)
													<img src="~/images/delete_icons.png" onclick="deleteSatnamingArchive('archive_@(idx)')" alt="移除">
												</td>
											</tr>
											<tr></tr>
										</tbody>
									</table>
								}
							</td>
							<input id="archiveRowNum" type="hidden" name="archiveRowNum" value="@archiveItems.Count()"></td>
						</tr>

						@* Output *@
						<tr>
							<td>Output<img src="~/images/add_icons.png" onclick="addSatnamingOutput()" alt="新增"/></td>
							<td>
								@for (var idx = 0; idx < outputItems.Count(); idx ++)
								{
									var item = outputItems.ElementAt(idx);

									<table id="outputTable">
										<tbody>
											<tr>
												<td id="output_@(idx)">
													<select name="Outputs[@(idx)].Work_Id">
														@foreach (var work in workItems)
														{
															<option value="@(work.Work_Id)">@work.Work_Name</option>	
														}
													</select>
													<input id="outputInput_@(idx)" name="Outputs[@(idx)].Model_Output" type="text" value="@item.Model_Output">(Ex: bin/R<font color="red">xxx</font>.ksh)
													<img src="~/images/delete_icons.png" onclick="deleteSatnamingOutput('output_@(idx)')" alt="移除">
												</td>
											</tr>
										</tbody>
									</table>
								}
								<input id="outputRowNum" type="hidden" name="outputRowNum" value="@outputItems.Count()">
							</td>
						</tr>

						@* maintainer Setting *@
						<tr>
							<td>maintainer Setting</td>
							<td>
								<input id="maintainer_status" type="radio" name="maintainer_status" value="0" @(Model?.Maintainer_Status == 0 || Model?.Maintainer_Status == null ? "checked" : string.Empty) >on
								<input id="maintainer_status" type="radio" name="maintainer_status" value="2" @(Model?.Maintainer_Status == 2 ? "checked" : string.Empty) >maintainer
							</td>
						</tr>
					</tbody>
				</table>
				<input type="submit" value="@(isNew ? "Add" : "Update")">
				@if(isNew == false)
				{
					<input type="button" value="Delete" onclick="deleteCheck()">
				}
			</form>
		</div>

		<script>
			function addSatnamingCronGroup(){
				let table = 'crontab';
				let num = document.getElementById("crontabRowNum").value;
				let otr = document.getElementById("crontabTable").insertRow(-1);
				let otd = document.createElement("td");
				otd.id = table + '_' + num ;
				otd.innerHTML=`<table id="crongrpTable_${num}" border=1>
									<th bgcolor=lightcyan align=left>
										New Mode name:
										<br>
										<input type="text" name="crontab_gid_${num}" id="crontab_gid_${num}" />
										<tr>
											<td id="crontab_${num}">
												New Cron time:<br>
												<input id="crontabInput_${num}" name="crontabInput_${num}" type="text" value="" />
											</td>
										</tr>
									</th>
								</table>`;
				otr.appendChild(otd);
				document.getElementById("crontabRowNum").value = parseInt(num) + 1;
			}

			function addSatnamingCrontab(gid){
				let table = 'crontab';
				let gtbl = 'crongrpTable_'+gid;
				let idx = document.getElementById("crontabRowNum").value;
				let otr = document.getElementById(gtbl).insertRow(-1);
				let otd = document.createElement("td");
				otd.id = table+'_'+idx ;
				otd.innerHTML=`<input id="crontabInput_${idx}" name="CronTabs[${idx}].Start_Time" type="text">
							   <img src="@(Href("~/images/delete_icons.png"))" onclick="deleteSatnamingCrontab('crontab_${idx}')" alt="移除"/>`;
				otd.innerHTML+=`<input id="crontab_gid_${idx}" name="CronTabs[${idx}].Cron_Group" type="hidden" value="${gid}">
								<input type="hidden" name="CronTabs[${idx}].Master_Group" value="${gid}" />`;
				otr.appendChild(otd);
				document.getElementById("crontabRowNum").value = parseInt(idx) + 1;
			}

			function deleteSatnamingCrontab(id){
				$(`#${id}`).remove();
				$('#crontabRowNum').val(parseInt($('#crontabRowNum').val()) - 1);
			}

			function addSatnamingBatch(){
				let table = 'batch';
				let idx = document.getElementById("batchRowNum").value;
				let otr = document.getElementById("batchTable").insertRow(-1);
				let otd = document.createElement("td");
				otd.id = table+'_'+idx ;
				otd.innerHTML=`<table>
									<tr>
										<td>Batch Position<font color="red">*</font></td>
										<td>
											<input id="batchInputPosition_${idx}" name="Batchs[${idx}].Batch_Position" type="text" value="">
											<img src="@(Href("~/images/delete_icons.png"))" onclick="deleteSatnamingBatch('batch_${idx}')" alt="移除" align="right"/>
										</td>
									</tr>
									<tr>
										<td>Batch Name<font color="red">*</font></td>
										<td>
											<input class="batchName"  id="batchInputName_${idx}" name="Batchs[${idx}].Batch_Name" type="text" size="17" value="">
											<input id="batchInputRelay_${idx}" name="Batchs[${idx}].Batch_Relay" type="checkbox" value="1">
										</td>
									</tr>
									<tr>
										<td>Batch Type</td>
										<td><input id="batchInputType_${idx}" name="Batchs[${idx}].Batch_Type" type="text" value=""></td>
									</tr>
									<tr>
										<td>Batch Dtg</td>
										<td><input id="batchInputDtg_${idx}" name="Batchs[${idx}].Batch_Dtg" type="text" value=""></td>
									</tr>
									<tr>
										<td>Batch Time<font color="red">*</font></td>
										<td><input id="batchInputTime_${idx}" name="Batchs[${idx}].Batch_Time" type="text" size="15" value="">分鐘</td>
									</tr>
									<tr>
										<td>Check Point<img id="showCheckPoint" src="@(Href("~/images/add_icons.png"))" alt="新增"/></td>
										<td></td>
									</tr>
								</table>`;
				otr.appendChild(otd);
				document.getElementById("batchRowNum").value = parseInt(idx) + 1;
			}

			function deleteSatnamingBatch(str,row_num){
				let td = document.getElementById(str).parentNode.rowIndex;
				document.getElementById('batchTable').deleteRow(td);
					$('div[aria-describedby="check_point_dialog_'+row_num+'"]').remove();
				$('#batchRowNum').val(parseInt($('#batchRowNum').val()) - 1);
			}

			function addSatnamingArchive(){
				let table = 'archive';
				let idx = document.getElementById("archiveRowNum").value;
				let otr_directory = document.getElementById("archiveTable").insertRow(-1);
				let otr_option = document.getElementById("archiveTable").insertRow(-1);
				let otd_directory = document.createElement("td");
 				let otd_option = document.createElement("td");

				otd_directory.id = table+'_'+idx ;
				otd_directory.innerHTML = `Target Directory：<input class="archive_directory" id="archive_directory_${idx}" type="text" name="Archives[${idx}].Target_Directory">`;
				otr_directory.appendChild(otd_directory);

				otd_option.id = table+'_'+idx ;
				otd_option.innerHTML=`<select name="Archives[${idx}].Data_Id">
										@foreach (var data in dataItems)
										{
											@Html.Raw($@"<option value=""{data.Data_Id}"">{data.Data_Name}</option>")
										}
									  </select>
									  <input id="archiveInput_${idx}" name="Archives[${idx}].Archive_Redo" type="text">
									  <img src="@(Href("~/images/delete_icons.png"))" onclick="deleteSatnamingArchive('archive_${idx}')" alt="移除"/>`;
				otr_option.appendChild(otd_option);

				document.getElementById("archiveRowNum").value = parseInt(idx) + 1;
			}

			function deleteSatnamingArchive(str){
				let td = document.getElementById(str).parentNode.rowIndex;
				document.getElementById('archiveTable').deleteRow(td);
				$('#'+str).remove();

				$('#archiveRowNum').val(parseInt($('#archiveRowNum').val()) - 1)
			}

			function addSatnamingOutput(){
				var table = 'output';
				var idx = document.getElementById("outputRowNum").value;
				var otr = document.getElementById("outputTable").insertRow(-1);
				var otd = document.createElement("td");
				otd.id = table+'_'+idx ;
				otd.innerHTML = `<select name="Outputs[${idx}].Work_Id">
									@foreach (var work in workItems)
									{
										@Html.Raw($@"<option value=""{work.Work_Id}"">{work.Work_Name}</option>")
									}
								</select>
								<input id="outputInput_${idx}" name="Outputs[${idx}].Model_Output" type="text" value="">
								<img src="@(Href("~/images/delete_icons.png"))" onclick="deleteSatnamingOutput('output_${idx}')" alt="移除"/>`;
				otr.appendChild(otd);
				document.getElementById("outputRowNum").value = parseInt(idx) + 1;
			}

			function deleteSatnamingOutput(str){
				var td = document.getElementById(str).parentNode.rowIndex;
				document.getElementById('outputTable').deleteRow(td);

				$('#outputRowNum').val(parseInt($('#outputRowNum').val()) - 1)
			}

			function deleteModelCheck(){
				if (confirm('Do You Want to Delete This Model ?\n\n(ALL the Members of this Model will be DELETE!)')){
					if (confirm('Are You Sure Delete This Model ?')){
						let setting = $('#setting');
						setting.prop('action', '@Url.Action(nameof(MaintainToolsController.DeleteModel))');
						setting.submit();
					}
				}
			}

			function deleteCheck(){
				if (confirm('Do You Want to Delete This Member ?')){
					let setting = $('#setting');
					setting.prop('action', '@Url.Action(nameof(MaintainToolsController.DeleteMember))');
					setting.submit();
				}
			}

			$('#setting').on('submit', function(e){
				let form = $(this);
				let url = form.attr('action');
								
				$.ajax({
					url: url,
					type: 'POST',
					dataType: 'json',
					data: form.serialize(),
					success: function(response){
						if(response.success){
							alert('Save success!');
						}
						else{
							alert('Save error!');
						}
					},
					error: function(error){
						alert('Save error!');
					}
				});

				e.preventDefault();
			})
		</script>
	</body>
</html>
